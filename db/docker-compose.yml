version: '3.8'

services:
  mongo1:
    image: mongo:6.0  # Use the latest stable version; adjust as needed
    container_name: mongo1
    command: ["mongod", "--replSet", "rs0"]
    volumes:
      - mongo1-data:/data/db
    ports:
      - "27027:27017"  # Expose to host on port 27017
    networks:
      - mongo-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  mongo2:
    image: mongo:6.0
    container_name: mongo2
    command: ["mongod", "--replSet", "rs0"]
    volumes:
      - mongo2-data:/data/db
    ports:
      - "27028:27017"  # Expose to host on port 27018, internal port 27017
    networks:
      - mongo-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  mongo3:
    image: mongo:6.0
    container_name: mongo3
    command: ["mongod", "--replSet", "rs0"]
    volumes:
      - mongo3-data:/data/db
    ports:
      - "27029:27017"  # Expose to host on port 27019, internal port 27017
    networks:
      - mongo-net
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  mongo-initiator:
    image: mongo:6.0
    container_name: mongo-initiator
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-net
    command: >
      sh -c "
        echo 'Waiting for MongoDB instances to be ready...';
        sleep 10;  # Extra delay if needed
        mongosh --host mongo1:27017 --eval 'rs.initiate({
          _id: \"rs0\",
          members: [
            { _id: 0, host: \"mongo1:27017\" },
            { _id: 1, host: \"mongo2:27017\" },
            { _id: 2, host: \"mongo3:27017\" }
          ]
        })';
        echo 'Replica set initiated.';
      "
    restart: "no"  # Run once and exit
  haproxy:
    image: haproxy:2.8
    container_name: haproxy
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "27019:27019"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongo-net


volumes:
  mongo1-data:
  mongo2-data:
  mongo3-data:

networks:
  mongo-net:
